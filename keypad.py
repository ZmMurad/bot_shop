from aiogram import types
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from config import admin_id,channel_url
#default menu

list_start=[[types.KeyboardButton(text="–ê–ö–ö–ê–£–ù–¢–´"),types.KeyboardButton(text="üë®‚Äçüíº–ü—Ä–æ—Ñ–∏–ª—å")
],[types.KeyboardButton(text="üóÑ–¢–æ–≤–∞—Ä—ã –≤ –Ω–∞–ª–∏—á–∏–∏")]]



startmarkup=types.ReplyKeyboardMarkup(keyboard=list_start, resize_keyboard=True)
#admin menu
list_admin=[[ types.KeyboardButton(text="–ê–ö–ö–ê–£–ù–¢–´"),types.KeyboardButton(text="üóÑ–¢–æ–≤–∞—Ä—ã –≤ –Ω–∞–ª–∏—á–∏–∏"),
             types.KeyboardButton(text="üë®‚Äçüíº–ü—Ä–æ—Ñ–∏–ª—å")],
            [types.KeyboardButton(text="üì®–†–∞—Å—Å—ã–ª–∫–∞"),
             types.KeyboardButton(text="üïπ–í–∫–ª\–í—ã–∫–ª")],[ types.KeyboardButton(text="‚ûï–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"),types.KeyboardButton(text="‚ûñ–£–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å"),
                                                  types.KeyboardButton(text="üó≥–¢–æ–≤–∞—Ä")]]

admin_menu=types.ReplyKeyboardMarkup(keyboard=list_admin, resize_keyboard=True)

def check_admin(id):
    if id in admin_id:
        return admin_menu
    return startmarkup

# check sub channel
# check_sub = types.InlineKeyboardMarkup(row_width=2)
# link_sub = types.InlineKeyboardButton("–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞", url='https://t.me/asdasdasdasdasdccz')
# check_sub_button = types.InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="checksub")
# check_sub.add(link_sub, check_sub_button)

# profile_more
profile_more =InlineKeyboardBuilder()
profile_more.add(types.InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤", callback_data="histor_order"))
profile_more.add(types.InlineKeyboardButton(text="–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral_program"))
profile_more.add(types.InlineKeyboardButton(text="–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="add_balance"))
profile_more.add(types.InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π", callback_data="histor_balance"))
profile_more.adjust(2)


# methods pay
methods_pay = InlineKeyboardBuilder()
methods_pay.add(types.InlineKeyboardButton(text="CryptoBot", callback_data="CryptoBot"))
methods_pay.add(types.InlineKeyboardButton(text="Cryptocloud", callback_data="crypto_cloud"))


# money_translation
money_translation = InlineKeyboardBuilder()
money_translation.add(types.InlineKeyboardButton(text="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å", callback_data="money_conclusions"))
money_translation.add(types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="tovar_ot"))
money_translation.adjust(1)


# brut_akk menu
brut_akk_menu = InlineKeyboardBuilder()
brut_akk_menu.add(types.InlineKeyboardButton(text="VK Play", callback_data="vk_play"))
brut_akk_menu.add(types.InlineKeyboardButton(text="Keys", callback_data="keys"))
brut_akk_menu.add(types.InlineKeyboardButton(text="Programs", callback_data="programs"))
brut_akk_menu.add(types.InlineKeyboardButton(text="Games", callback_data="games"))
brut_akk_menu.add(types.InlineKeyboardButton(text="Steam", callback_data="steam"))
brut_akk_menu.add(types.InlineKeyboardButton(text="Epic Games", callback_data="epic_games"))
brut_akk_menu.add(types.InlineKeyboardButton(text="Rockstar Games", callback_data="rockstar_games"))
brut_akk_menu.add(types.InlineKeyboardButton(text="üåè–î—Ä—É–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ãüåè", callback_data="other_services"))
brut_akk_menu.adjust(1)

# other_services
other_services_menu = InlineKeyboardBuilder()
other_services_menu.add(types.InlineKeyboardButton(text="Youtube", callback_data="youtube"))
other_services_menu.add(types.InlineKeyboardButton(text="Twitch", callback_data="twitch"))
other_services_menu.add(types.InlineKeyboardButton(text="Tiktok", callback_data="tiktok"))
other_services_menu.add(types.InlineKeyboardButton(text="Instagram", callback_data="instagram"))
other_services_menu.add(types.InlineKeyboardButton(text="Twitter", callback_data="twitter"))
other_services_menu.add(types.InlineKeyboardButton(text="Facebook", callback_data="facebook"))
other_services_menu.add(types.InlineKeyboardButton(text="Roblox", callback_data="roblox"))
other_services_menu.add(types.InlineKeyboardButton(text="Genshin", callback_data="genshin"))
other_services_menu.add(types.InlineKeyboardButton(text="Amazon", callback_data="amazon"))
other_services_menu.add(types.InlineKeyboardButton(text="Netflix", callback_data="netflix"))
other_services_menu.add(types.InlineKeyboardButton(text="üîô–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="back_first"))
other_services_menu.adjust(1)

# category_local
category_local = InlineKeyboardBuilder()
category_local.add(types.InlineKeyboardButton(text="üîô–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="back_first"))
category_local.adjust(1)

buy_local_butt_vkplay_0 = InlineKeyboardBuilder()
buy_local_butt_vkplay_0.add(types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—Å—è –≤ –º–µ–Ω—é', callback_data="tovar_ot"))
buy_local_butt_vkplay_0.add(types.InlineKeyboardButton(text="üîô–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="category_local"))
buy_local_butt_vkplay_0.add(types.InlineKeyboardButton(text="üîô–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="back_first"))
buy_local_butt_vkplay_0.adjust(1)


buy_local_butt_0 = InlineKeyboardBuilder()
buy_local_butt_0.add(types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—Å—è –≤ –º–µ–Ω—é', callback_data="tovar_ot"))
buy_local_butt_0.add(types.InlineKeyboardButton(text="üîô–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="back_first"))
buy_local_butt_0.adjust(1)


#–º–µ–Ω—é —Ç–æ–≤–∞—Ä
product_menu= InlineKeyboardBuilder()
product_menu.add(types.InlineKeyboardButton(text="–¢–æ–≤–∞—Ä—ã –≤ –ø—Ä–æ–¥–∞–∂–µ", callback_data="get_product"))
product_menu.add(types.InlineKeyboardButton(text="–ü—Ä–æ–¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã", callback_data="get_sold_product"))
product_menu.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data="add_product"))
product_menu.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data="del_product"))
product_menu.adjust(2)


# check sub channel
check_sub = InlineKeyboardBuilder()
check_sub.adjust(1)